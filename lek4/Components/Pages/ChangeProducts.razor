@page "/change-products"

@inject NavigationManager NavigationManager
@inject lek4.Components.Service.ProductService ProductService

<h3>Change Products</h3>

<div class="product-list">
    @foreach (var productNumber in productNumbers)
    {
        <div class="product-item">
            <p>Product @productNumber</p>
            <button @onclick="() => EditProduct(productNumber)">Edit Product</button>
            <button @onclick="() => RemoveProduct(productNumber)" class="remove-button">Remove</button>
        </div>
    }
</div>

<h3>Add New Product</h3>
<div class="add-product-form">
    <label for="newProductNumber">Product Number</label>
    <input type="number" id="newProductNumber" min="1" @bind="newProductNumber" />

    <button @onclick="AddProduct">Add Product</button>
</div>

@code {
    private List<int> productNumbers;
    private int newProductNumber;

    protected override void OnInitialized()
    {
        productNumbers = ProductService.GetProductNumbers(); // Hämta produktlistan från ProductService
    }

    private void AddProduct()
    {
        if (newProductNumber > 0)
        {
            ProductService.AddProduct(newProductNumber);
            productNumbers = ProductService.GetProductNumbers(); // Uppdatera produktlistan efter tillägg
            newProductNumber = 0; // Nollställ inputfältet
        }
    }

    private void RemoveProduct(int productNumber)
    {
        ProductService.RemoveProduct(productNumber);
        productNumbers = ProductService.GetProductNumbers(); // Uppdatera produktlistan efter borttagning
        StateHasChanged(); // Uppdatera UI
    }

    private void EditProduct(int productNumber)
    {
        // Kontrollera om produkten fortfarande existerar innan navigation
        if (productNumbers.Contains(productNumber))
        {
            NavigationManager.NavigateTo($"/edit-product/{productNumber}");
        }
        else
        {
            // Om produkten har tagits bort kan vi visa ett felmeddelande eller navigera tillbaka
            NavigationManager.NavigateTo("/change-products");
        }
    }
}

<style>
    .product-list {
        margin-top: 20px;
    }

    .product-item {
        margin-bottom: 20px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .remove-button {
        background-color: red;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        cursor: pointer;
    }

        .remove-button:hover {
            background-color: darkred;
        }

    .add-product-form {
        margin-top: 30px;
    }

    input[type="number"] {
        margin-right: 10px;
        padding: 5px;
        width: 80px;
    }

    button {
        padding: 5px 10px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

        button:hover {
            background-color: #45a049;
        }
</style>
