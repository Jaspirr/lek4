@page "/products/{number:double}"

@inject NavigationManager NavigationManager
@inject lek4.Components.Service.NumberService NumberService

@code {
    [Parameter]
    public double number { get; set; }

    private List<int> productNumbers;
    private int unlockingProduct = -1; // Håller reda på vilken produkt som håller på att låsas upp

    protected override void OnParametersSet()
    {
        NumberService.CurrentNumber = number;
        int maxProductNumber = (int)Math.Floor(number);
        productNumbers = Enumerable.Range(1, maxProductNumber).ToList();
    }

    private async Task GoToProduct(int productNumber)
    {
        unlockingProduct = productNumber;
        StateHasChanged(); // Uppdatera komponenten för att starta animationen
        await Task.Delay(500); // Vänta tills animationen är klar (0,5 sekund)
        NumberService.UnlockProduct(productNumber);
        NavigationManager.NavigateTo($"/product/{productNumber}");
    }

    private string GetIconClass(int productNumber)
    {
        return NumberService.IsProductUnlocked(productNumber) ? "fas fa-unlock" : "fas fa-lock";
    }

    private bool IsProductLockedIn(int productNumber)
    {
        return NumberService.IsProductLockedIn(productNumber);
    }
}

<h3 class="center-title">Products</h3>

<div class="product-grid">
    @foreach (var productNumber in productNumbers)
    {
        <div class="product product-@(productNumber) @(unlockingProduct == productNumber ? "unlocking" : "")">
            <a @onclick="async () => await GoToProduct(productNumber)">
                @if (!IsProductLockedIn(productNumber))
                {
                    <i class="@GetIconClass(productNumber)"></i> <!-- Hänglåsikon -->
                }
                @if (IsProductLockedIn(productNumber))
                {
                    <span class="checkmark">✔</span> <!-- Bock ikon -->
                }
            </a>
        </div>
    }
</div>

<style>
    .product-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
    }

    .product {
        width: 150px; /* Bestämd bredd för fyrkant */
        height: 150px; /* Bestämd höjd för fyrkant */
        box-sizing: border-box;
        border: 1px solid #ddd;
        text-align: center;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
    }

    .product a {
        text-decoration: none;
        color: inherit;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        position: relative;
    }

    .product a i {
        font-size: 2em; /* Justera storleken på ikonen */
        transform: rotate(315deg); /* Starta med 315 graders rotation */
    }

    .product.unlocking i {
        animation: shake 0.5s; /* Skakningsanimation */
    }

    .checkmark {
        font-size: 2em;
        color: green;
    }
</style>
