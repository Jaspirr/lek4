@page "/change-password"
@using Firebase.Auth
@using System.Text.Json
@using System.Text
@inject FirebaseAuthClient AuthClient
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<div class="change-password">
    <h3>Change Password</h3>
    <EditForm Model="passwordModel" OnValidSubmit="HandleChangePassword">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="change-password-item">
            <label for="currentPassword">Current Password:</label>
            <InputText id="currentPassword" @bind-Value="passwordModel.CurrentPassword" type="password" />
        </div>
        <div class="change-password-item">
            <label for="newPassword">New Password:</label>
            <InputText id="newPassword" @bind-Value="passwordModel.NewPassword" type="password"  />
        </div>
        <div class="change-password-item">
            <label for="confirmPassword">Confirm New Password:</label>
            <InputText id="confirmPassword" @bind-Value="passwordModel.ConfirmPassword" type="password" />
        </div>
        <div class="change-password-button-group">
            <button type="submit" class="change-password-save-button">Update Password</button>
        </div>
    </EditForm>
    <div class="change-password-error-message" style="color: red; text-align: center; margin-top: 15px;">
        @errorMessage
    </div>
</div>

@code {
    private PasswordModel passwordModel = new PasswordModel();
    private string errorMessage;

    private async Task HandleChangePassword()
    {
        try
        {
            var user = AuthClient.User;
            if (user == null)
            {
                errorMessage = "No user is currently signed in.";
                return;
            }

            if (passwordModel.NewPassword != passwordModel.ConfirmPassword)
            {
                errorMessage = "New password and confirmation do not match.";
                return;
            }

            // Byt lösenord via Firebase REST API
            var apiKey = "AIzaSyCyLKylikL5dUKQEKxMn6EkY6PnBWKmJtA";
            var changePasswordUrl = $"https://identitytoolkit.googleapis.com/v1/accounts:update?key={apiKey}";

            var payload = new
            {
                idToken = user.Credential.IdToken, // Användarens ID-token
                password = passwordModel.NewPassword,
                returnSecureToken = true
            };

            var jsonPayload = JsonSerializer.Serialize(payload);
            var content = new StringContent(jsonPayload, Encoding.UTF8, "application/json");

            var response = await HttpClient.PostAsync(changePasswordUrl, content);
            if (response.IsSuccessStatusCode)
            {
                errorMessage = "Password successfully updated!";
            }
            else
            {
                var errorResponse = await response.Content.ReadAsStringAsync();
                errorMessage = $"Failed to update password: {errorResponse}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An unexpected error occurred: {ex.Message}";
        }
    }


    public class PasswordModel
    {
        public string CurrentPassword { get; set; }
        public string NewPassword { get; set; }
        public string ConfirmPassword { get; set; }
    }
}
<style>
    .change-password {
        max-width: 400px;
        margin: 50px auto;
        padding: 25px;
        border: 1px solid #ddd;
        border-radius: 10px;
        background-color: #ffffff;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        font-family: 'Arial', sans-serif;
    }

    .change-password h3 {
        text-align: center;
        color: #4a4a4a;
        font-size: 1.8em;
        margin-bottom: 20px;
        font-weight: 600;
    }

    .change-password-item {
        display: flex;
        flex-direction: column;
        margin-bottom: 15px;
    }

    .change-password-item label {
        font-weight: bold;
        color: #555;
        margin-bottom: 5px;
    }

    .change-password-item input {
        padding: 10px;
        font-size: 1rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        width: 100%;
    }

    .change-password-item input:focus {
        border-color: #a882d6;
        outline: none;
        box-shadow: 0 0 5px rgba(168, 130, 214, 0.5);
    }

    .change-password-button-group {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .change-password-save-button {
        background-color: #556B2F;
        color: #F0FFF0;
        border: none;
        padding: 12px 20px;
        font-size: 1rem;
        cursor: pointer;
        border-radius: 5px;
        transition: all 0.3s ease;
    }

    .change-password-save-button:hover {
        background-color: #8b5fc1;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    .change-password-save-button:disabled {
        background-color: #e3d7f1;
        cursor: not-allowed;
    }

    @@media (max-width: 480px) {
        .change-password {
            padding: 15px;
            margin: 20px;
        }

        .change-password-item input {
            font-size: 0.9rem;
        }

        .change-password-save-button {
            font-size: 0.9rem;
            padding: 10px 15px;
        }
    }
</style>