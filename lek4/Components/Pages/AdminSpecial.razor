@page "/admin-specialinfo"
@using lek4.Components.Service
@inject HttpClient HttpClient
@inject SpecialService SpecialService
@inject NavigationManager NavigationManager

<h2>Special Info Admin Panel</h2>
<button @onclick="NavigateBack">← Back</button>
<div class="admin-container">
    <form class="special-info-form" @onsubmit="SaveSpecialInfo">
        <div class="form-group">
            <label for="name">Name:</label>
            <input id="name" type="text" class="form-control" @bind="specialInfo.Name" placeholder="Enter name" />
        </div>

        <div class="form-group">
            <label for="description">Description:</label>
            <textarea id="description" class="form-control" @bind="specialInfo.Description" placeholder="Enter description"></textarea>
        </div>

        <div class="form-group">
            <label for="credits">Credits:</label>
            <input id="credits" type="number" class="form-control" @bind="specialInfo.Credits" placeholder="Enter credits" />
        </div>

        <div class="form-group">
            <label for="imageUrl">Image URL:</label>
            <input id="imageUrl" type="text" class="form-control" @bind="specialInfo.ImageUrl" placeholder="Enter image URL" />
        </div>

        <div class="form-group">
            <label for="specialLink">Link:</label>
            <input id="specialLink" type="text" class="form-control" @bind="specialInfo.Link" placeholder="Enter or update the link" />
        </div>

        <button type="submit" class="btn btn-primary">Save Special Info</button>
    </form>

    @if (message != null)
    {
        <p class="message">@message</p>
    }
</div>

@code {
    private SpecialInfo specialInfo = new SpecialInfo();
    private string message;

    protected override async Task OnInitializedAsync()
    {
        await LoadSpecialInfo();
    }
    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/admin");
    }
    private async Task LoadSpecialInfo()
    {
        try
        {
            specialInfo = await SpecialService.GetSpecialInfo();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading special info: {ex.Message}");
        }
    }

    private async Task SaveSpecialInfo()
    {
        try
        {
            bool success = await SpecialService.SaveSpecialInfo(specialInfo);
            message = success ? "Special Info successfully saved!" : "Failed to save Special Info.";
            await InvokeAsync(StateHasChanged);
        }
        catch (Exception ex)
        {
            message = $"Error saving special info: {ex.Message}";
        }
    }
}

<style>
    .admin-container {
        max-width: 600px;
        margin: auto;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 10px;
        background: #f9f9f9;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        margin-top: 5px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        background: #007bff;
        color: white;
        cursor: pointer;
    }

    .btn:hover {
        background: #0056b3;
    }

    .message {
        margin-top: 20px;
        font-weight: bold;
        color: green;
    }
</style>
