@page "/products/{number:double}"

@inject NavigationManager NavigationManager
@inject lek4.Components.Service.NumberService NumberService

@code {
    [Parameter]
    public double number { get; set; }

    private List<int> productNumbers;
    private int unlockingProduct = -1; // Håller reda på vilken produkt som håller på att låsas upp
    private double remainingOdds;

    protected override void OnParametersSet()
    {
        NumberService.CurrentNumber = number;
        remainingOdds = Math.Min(NumberService.GetRemainingOdds(), 100.0); // Limit to 100
        productNumbers = Enumerable.Range(1, NumberService.MaxProductNumber).ToList(); // Use MaxProductNumber to display products
    }

    private async Task GoToProduct(int productNumber)
    {
        unlockingProduct = productNumber;
        StateHasChanged(); // Uppdatera komponenten för att starta animationen
        await Task.Delay(500); // Vänta tills animationen är klar (0,5 sekund)
        NumberService.UnlockProduct(productNumber);
        NavigationManager.NavigateTo($"/product/{productNumber}");
    }

    private string GetIconClass(int productNumber)
    {
        return NumberService.IsProductUnlocked(productNumber) ? "fas fa-unlock" : "fas fa-lock";
    }

    private bool IsProductLockedIn(int productNumber)
    {
        return NumberService.IsProductLockedIn(productNumber);
    }
}

<h3 class="center-title">Products</h3>
<p class="remaining-odds">Remaining Odds: @remainingOdds</p> <!-- Display remaining odds -->

<div class="product-grid">
    @foreach (var productNumber in productNumbers)
    {
        <div class="product product-@(productNumber) @(unlockingProduct == productNumber ? "unlocking" : "")">
            <a @onclick="async () => await GoToProduct(productNumber)">
                @if (IsProductLockedIn(productNumber))
                {
                    <i class="fas fa-check checkmark"></i>  <!-- Bock ikon -->
                }
                else
                {
                    <i class="@GetIconClass(productNumber)"></i> <!-- Hänglåsikon -->
                }
            </a>
        </div>
    }
</div>

<style>
    .product {
        width: 150px;
        height: 150px;
        box-sizing: border-box;
        border: 1px solid #ddd;
        text-align: center;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .product:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
        }

        .product a {
            text-decoration: none;
            color: inherit;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            height: 100%;
            position: relative;
            transition: color 0.3s ease-in-out;
        }

            .product a i {
                font-size: 2em;
                transform: rotate(315deg);
                transition: transform 0.3s ease-in-out;
            }

        .product:hover a i {
            transform: rotate(0deg);
        }

    .remaining-odds{
        text-align:center;
    }
    .checkmark {
        font-size: 2em;
        color: green;
    }
</style>
